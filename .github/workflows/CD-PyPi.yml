---
name: CD-PyPi
description: "Continuous Deployment workflow for PyPi publishing."
run-name: Build and publish ${{ github.ref_name }} by @${{ github.actor }}

on:
  release:
    types:
      - published

permissions: {}

env:
  ENVIRONMENT: ${{ (github.ref == 'refs/heads/stable' || startsWith(github.ref, 'refs/tags/v')) && 'Deployment' || (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/feature') || startsWith(github.ref, 'refs/heads/patch-') || startsWith(github.ref, 'refs/tags/v')) && 'Testing' || 'Experimenting' }}
  # Define Python versions at the top level -- Expected format: X.Y (e.g., 3.13)
  PYTHON_DEFAULT: "${{ vars.PYTHON_DEFAULT }}"

jobs:
  pypi-publish:
    name: upload release to PyPI
    if: ${{ github.event_name == 'release' && (github.repository == 'reactive-firewall-org/multicast') && startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    # Specifying a GitHub environment is optional, but strongly encouraged
    # environment: pypi
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
      statuses: write
      contents: read
      actions: read
    defaults:
      run:
        shell: bash
    env:
      LANG: "en_US.UTF-8"
    outputs:
      build_status: ${{ steps.build.outcome }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - id: build-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "${{ vars.PYTHON_DEFAULT }}"
      - id: output_python
        name: "bootstrap Python"
        shell: bash
        run: |
          printf "%s\n" "::group::bootstrap-python-env"
          printf "python-path=%s\n" "${{ steps.build-python.outputs.python-path }}" >> "$GITHUB_OUTPUT"
          printf "PYTHON=%s\n" "${{ steps.build-python.outputs.python-path }}" >> "$GITHUB_ENV"
          printf "python-version=%s\n" "${{ steps.build-python.outputs.python-version }}" >> "$GITHUB_OUTPUT"
          printf "PYTHON_VERSION=%s\n" "${{ steps.build-python.outputs.python-version }}" >> "$GITHUB_ENV"
          printf "%s\n" "::endgroup::"
      - name: Pre-Clean
        id: clean
        shell: bash
        run: make -j1 -f Makefile purge 2>/dev/null || true
      - name: Build
        id: build
        shell: bash
        run: make -j1 -f Makefile build
      - name: Publish package distributions to PyPI
        if: ${{ success() }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          packages-dir: dist/
